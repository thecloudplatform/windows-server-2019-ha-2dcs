{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the Administrator of the new VM and Domain"
            },
            "defaultValue": "CloudAdmin"
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the Administrator account of the new VM and Domain"
            }
        },
        "domainName": {
            "type": "string",
            "metadata": {
                "description": "The FQDN of the AD Domain created "
            },
            "defaultValue": "test.jaysam.co.uk"
        },
        "DomainNetBIOSName": {
            "type": "string",
            "metadata": {
                "description": "The NetBIOS of the AD Domain created (max 15 characters)"
            },
            "defaultValue": "testjaysam"
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "The VNET of the network created"
            },
            "defaultValue": "Test-Jaysam"
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "The DNS prefix for the public IP address used by the Load Balancer"
            },
            "defaultValue": "testjaysam"
        },
        "pdcRDPPort": {
            "type": "int",
            "metadata": {
                "description": "The public RDP port for the DC1 VM"
            },
            "defaultValue": 13389
        },
        "bdcRDPPort": {
            "type": "int",
            "metadata": {
                "description": "The public RDP port for the DC2 VM"
            },
            "defaultValue": 23389
        },
        "vhdStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "The name of the new storage account created to store the VMs disks"
            },
            "defaultValue": "testjaysamstorage"
        },
        "storageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS"
            ],
            "metadata": {
                "description": "The type of the Storage Account created"
            },
            "defaultValue": "Standard_LRS"
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources, such as templates and DSC modules, that the template depends on"
            },
            "defaultValue": "https://raw.githubusercontent.com/thecloudplatform/windows-server-2019-ha-2dcs/master"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation"
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "adPDCVMName": "DC1",
        "adBDCVMName": "DC2",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "imageSKU": "2019-Datacenter-GenSecond",
        "adAvailabilitySetName": "DCAvailabilitySet",
        "publicIPAddressName": "DCPublicIP",
        "adVMSize": "Standard_D2s_v3",
        "adLBFE": "DCLBFE",
        "adLBBE": "DCLBBE",
        "adPDCRDPNAT": "DC1RDP",
        "adBDCRDPNAT": "DC2RDP",
        "virtualNetworkAddressRange": "10.0.0.0/16",
        "adSubnetName": "Subnet",
        "adSubnet": "10.0.0.0/24",
        "adPDCNicName": "DC1Nic",
        "adPDCNicIPAddress": "10.0.0.11",
        "adBDCNicName": "DC2Nic",
        "adBDCNicIPAddress": "10.0.0.12",
        "adSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('adSubnetName'))]",
        "adLBName": "DCLoadBalancer",
        "adlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]",
        "adlbFEConfigID": "[concat(variables('adlbID'),'/frontendIPConfigurations/',variables('adLBFE'))]",
        "adPDCRDPNATRuleID": "[concat(variables('adlbID'),'/inboundNatRules/',variables('adPDCRDPNAT'))]",
        "adBDCRDPNATRuleID": "[concat(variables('adlbID'),'/inboundNatRules/',variables('adBDCRDPNAT'))]",
        "adBEAddressPoolID": "[concat(variables('adlbID'),'/backendAddressPools/',variables('adLBBE'))]",
        "adPDCDataDisk": "DC1DataDisk",
        "adBDCDataDisk": "DC2DataDisk",
        "adDataDiskSize": 1000,
        "vnetTemplateUri": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/vnet.json', parameters('_artifactsLocationSasToken'))]",
        "nicTemplateUri": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/nic.json', parameters('_artifactsLocationSasToken'))]",
        "vnetwithDNSTemplateUri": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/vnet-with-dns-server.json', parameters('_artifactsLocationSasToken'))]",
        "configureADBDCTemplateUri": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/configureADBDC.json', parameters('_artifactsLocationSasToken'))]",
        "adPDCModulesURL": "[concat(parameters('_artifactsLocation'),'/DSC/CreateADPDC.zip', parameters('_artifactsLocationSasToken'))]",
        "adPDCConfigurationFunction": "CreateADPDCv2.ps1\\CreateADPDC",
        "adBDCPreparationModulesURL": "[concat(parameters('_artifactsLocation'),'/DSC/PrepareADBDC.zip', parameters('_artifactsLocationSasToken'))]",
        "adBDCPreparationFunction": "PrepareADBDC.ps1\\PrepareADBDC",
        "adBDCConfigurationModulesURL": "[concat(parameters('_artifactsLocation'),'/DSC/ConfigureADBDC.zip', parameters('_artifactsLocationSasToken'))]",
        "adBDCConfigurationFunction": "ConfigureADBDC.ps1\\ConfigureADBDC",
        "nsgName": "NSG",
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
        "subnets": [
            {
                "name": "[variables('adSubnetName')]",
                "properties": {
                    "addressPrefix": "[variables('adSubnet')]",
                    "networkSecurityGroup": {
                        "id": "[variables('nsgID')]"
                    }
                }
            }
        ]
    },
    "resources": [
        {
            "name": "[variables('nsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "location": "[resourceGroup().location]",
            "apiVersion": "2021-05-01",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-In",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('vhdStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-08-01",
            "location": "[resourceGroup().location]",
            "properties": {},
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "Storage"
        },
        {
            "name": "[variables('publicIPAddressName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2021-05-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsPrefix')]"
                }
            }
        },
        {
            "name": "[variables('adAvailabilitySetName')]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2021-11-01",
            "location": "[resourceGroup().location]"
        },
        {
            "name": "VNet",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[variables('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[variables('adSubnetName')]"
                    },
                    "subnetRange": {
                        "value": "[variables('adSubnet')]"
                    }
                }
            }
        },
        {
            "name": "[variables('adLBName')]",
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2021-05-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('adLBFE')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('adLBBE')]"
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[variables('adPDCRDPNAT')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('adlbFEConfigID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": "[parameters('pdcRDPPort')]",
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "[variables('adBDCRDPNAT')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('adlbFEConfigID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": "[parameters('bdcRDPPort')]",
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('adPDCNicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-05-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Resources/deployments/VNet",
                "[variables('adLBName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('adPDCNicIPAddress')]",
                            "subnet": {
                                "id": "[variables('adSubnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('adBEAddressPoolID')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[variables('adPDCRDPNATRuleID')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('adBDCNicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-05-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Resources/deployments/VNet",
                "[concat('Microsoft.Network/loadBalancers/',variables('adLBName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('adBDCNicIPAddress')]",
                            "subnet": {
                                "id": "[variables('adSubnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('adBEAddressPoolID')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[variables('adBDCRDPNATRuleID')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('adPDCVMName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts',parameters('vhdStorageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('adVMSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
                },
                "osProfile": {
                    "computerName": "[variables('adPDCVMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('vhdStorageAccountName'))).primaryEndpoints.blob,'vhds0/','osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "vhd": {
                                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('vhdStorageAccountName'))).primaryEndpoints.blob,'vhds0/', variables('adPDCDataDisk'),'-1.vhd')]"
                            },
                            "name": "[concat(variables('adPDCVMName'),'-data-disk1')]",
                            "caching": "None",
                            "diskSizeGB": "[variables('adDataDiskSize')]",
                            "lun": 0,
                            "createOption": "empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "CreateADForest",
                    "type": "extensions",
                    "apiVersion": "2021-11-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('adPDCVMName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.21",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[variables('adPDCModulesURL')]",
                            "ConfigurationFunction": "[variables('adPDCConfigurationFunction')]",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "DomainNetBIOSName": "[parameters('DomainNetBIOSName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUserName')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                }
            ]
        },
        {
            "name": "UpdateVNetDNS1",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('adPDCVMName'),'/extensions/CreateADForest')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetwithDNSTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[variables('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[variables('adSubnetName')]"
                    },
                    "subnetRange": {
                        "value": "[variables('adSubnet')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[variables('adPDCNicIPAddress')]"
                        ]
                    }
                }
            }
        },
        {
            "name": "UpdateBDCNIC",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('adBDCNicName'))]",
                "Microsoft.Resources/deployments/UpdateVNetDNS1"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nicTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nicName": {
                        "value": "[variables('adBDCNicName')]"
                    },
                    "ipConfigurations": {
                        "value": [
                            {
                                "name": "ipconfig1",
                                "properties": {
                                    "privateIPAllocationMethod": "Static",
                                    "privateIPAddress": "[variables('adBDCNicIPAddress')]",
                                    "subnet": {
                                        "id": "[variables('adSubnetRef')]"
                                    },
                                    "loadBalancerBackendAddressPools": [
                                        {
                                            "id": "[variables('adBEAddressPoolID')]"
                                        }
                                    ],
                                    "loadBalancerInboundNatRules": [
                                        {
                                            "id": "[variables('adBDCRDPNATRuleID')]"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "dnsServers": {
                        "value": [
                            "[variables('adPDCNicIPAddress')]"
                        ]
                    }
                }
            }
        },
        {
            "name": "[variables('adBDCVMName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts',parameters('vhdStorageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces',variables('adBDCNicName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('adVMSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
                },
                "osProfile": {
                    "computerName": "[variables('adBDCVMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('vhdStorageAccountName'))).primaryEndpoints.blob,'vhds1/','osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "vhd": {
                                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('vhdStorageAccountName'))).primaryEndpoints.blob,'vhds1/',variables('adBDCDataDisk'),'-1.vhd')]"
                            },
                            "name": "[concat(variables('adBDCVMName'),'-data-disk1')]",
                            "caching": "None",
                            "diskSizeGB": "[variables('adDataDiskSize')]",
                            "lun": 0,
                            "createOption": "empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('adBDCNicName'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('adBDCVMName'),'/PrepareBDC')]",
            "apiVersion": "2021-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('adBDCVMName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.21",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "ModulesUrl": "[variables('adBDCPreparationModulesURL')]",
                    "ConfigurationFunction": "[variables('adBDCPreparationFunction')]",
                    "Properties": {
                        "DNSServer": "[variables('adPDCNicIPAddress')]"
                    }
                }
            }
        },
        {
            "name": "ConfiguringBackupADDomainController",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('adBDCVMName'),'/extensions/PrepareBDC')]",
                "Microsoft.Resources/deployments/UpdateBDCNIC"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configureADBDCTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adBDCVMName": {
                        "value": "[variables('adBDCVMName')]"
                    },
                    "location": {
                        "value": "[resourceGroup().location]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "adBDCConfigurationFunction": {
                        "value": "[variables('adBDCConfigurationFunction')]"
                    },
                    "adBDCConfigurationModulesURL": {
                        "value": "[variables('adBDCConfigurationModulesURL')]"
                    }
                }
            }
        },
        {
            "name": "UpdateVNetDNS2",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/ConfiguringBackupADDomainController"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetwithDNSTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[variables('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[variables('adSubnetName')]"
                    },
                    "subnetRange": {
                        "value": "[variables('adSubnet')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[variables('adPDCNicIPAddress')]",
                            "[variables('adBDCNicIPAddress')]"
                        ]
                    }
                }
            }
        }
    ]
}
